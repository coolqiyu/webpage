body, div, p, ul, li{
	margin: 0;
	padding: 0;
}
h1, h2, h3{
	text-align: center;
}
/*.clearfix{
	clear: both;
}*/
.clearfix:after{
	content:"";
	display: block;
	clear: both;
}
.chunk{
	float: left;
	margin: 20px;
	padding: 20px;
	width: 200px;
	height: 200px;
	background: #000;
}
/*用一个container来包含中间的circle*/
.container{
	position: relative;
	width: 90%;
	height: 90%;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}
.lighten .circle{
	position: absolute;
	box-sizing: border-box;
	width: 100%;
	height: 100%;
	border-radius: 100%;
	background: #fff;
	border: 10px solid #fff;
	/*mix-blend-mode是内容，而background-blend-mode只是背景部分*/
	mix-blend-mode: lighten;
	animation: circle 3s linear infinite;
}
.lighten .red{
	border-color: red;
	animation-delay: 0s;
}
.lighten .green{
	border-color: green;
	animation-delay: 1s;
}
.lighten .blue{
	border-color: blue; 
	animation-delay: 2s;
}
/*设置位置不要四个方向都设，只要用top和left就好*/
@keyframes circle{	
  0%{  	
	top: 0;
  	left: -10px;
  }
  25%{
  	top: -10px;
  	left: 0;
  }
  50%{
  	top: 0;
  	left: 10px;
  }
  75%{
  	left: 0;
	top: 10px;
 }
  100%{  	
	top: 0;
  	left: -10px;
  }
}

.difference{
	width: 200px;
	height: 200px;
}
.difference .container{
	background-image: url("./img/bw1.jpg");	
	border-radius: 100%;
	/*animation: rotate 2s linear infinite;*/
}
.difference .circle{
	position: absolute;
	width: 60%;
	height: 60%;
	border-radius: 100%;
	background: #fff;
	mix-blend-mode: difference;
	transform-origin: 80% 80%;
	animation: rotate 6s linear infinite;
}
@keyframes rotate{
	0%{
		transform: rotateZ(0deg);
	}
	16%{
		transform: rotateZ(60deg);
	}
	32%{
		transform: rotateZ(120deg);
	}
	48%{
		transform: rotateZ(180deg);
	}
	64%{
		transform: rotateZ(240deg);
	}
	80%{
		transform: rotateZ(300deg);
	}
	100%{
		transform: rotateZ(360deg);
	}
}
.difference .circle div{
	position: absolute;
	bottom: 5px;
	left: 5px;
	width: 70%;
	height: 70%;
	background: #000;
	border-radius: 100%;
}
.difference .circle:nth-child(2){
	/*transform: rotateZ(60deg);*/
	animation-delay: 1s;
}
.difference .circle:nth-child(3){
	/*transform: rotateZ(120deg);*/
	animation-delay: 2s;
}
.difference .circle:nth-child(4){
	/*transform: rotateZ(180deg);*/
	animation-delay: 3s;
}
.difference .circle:nth-child(5){
	/*transform: rotateZ(240deg);*/
	animation-delay: 4s;
}
.difference .circle:nth-child(6){
	/*transform: rotateZ(300deg);*/
	animation-delay: 5s;
}

/*
文字红色阴影
一层文字改变高度
白线div
after,before伪元素
- 继承所有可继承的属性
- 不能继承的使用初始设置
- 默认为inline
- replaced元素不能添加，比如img, input等
- 伪元素是包含在原元素中<p><span>before</span>增加before</p>
 */
.text-magic{
	position: relative;
	width: 500px;
	background: #fff;
    font-size: 64px;
    font-family: Raleway, Verdana, Arial, sans-serif;
    animation: skewX 5s ease-in infinite;
}

.text-magic:before {
    content: attr(data-word);
    position: absolute;
    top: 0;
    left: 1px;
    height: 0px;
    color: rgba(255, 0, 0, .9);
    overflow: hidden;
    z-index: 2;
    animation: redShadow 1.5s ease-in infinite;
    -webkit-filter: contrast(200%);
    text-shadow: 0.1px 0 0 red;
    mix-blend-mode: color-burn;
}

.text-magic:after {
    content: attr(data-word);
    position: absolute;
    top: 0;
    left: -3px;
    height: 64px;
    color: rgba(0, 0, 0, .8);
    overflow: hidden;
    z-index: 3;
    background: rgba(255, 255, 255, .9);
    animation: redHeight 2s ease-out infinite;
    -webkit-filter: contrast(200%);
    mix-blend-mode: hard-light;
}

@keyframes redShadow {
    20% {
        left: -1px;
        height: 32px;
    }
    60% {
        left: 2px;
        height: 6px;
    }
    100% {
        left: -2px;
        height: 42px;
    }
}

@keyframes redHeight {
    20% {
        height: 42px;
    }
    35% {
        height: 12px;
    }
    50% {
        height: 40px;
    }
    60% {
        height: 20px;
    }
    70% {
        height: 34px;
    }
    80% {
        height: 22px;
    }
    100% {
        height: 0px;
    }
}

@keyframes skewX {
    78% {
        transform: skewX(0);
    }
    79% {
        transform: skewX(10deg);
    }
    80% {
        transform: skewX(-10deg);
    }
    81% {
        transform: skewX(0);
    }
}
.white {
    position: absolute;
    left: 0;
    top: 15px;
    width: 100%;
    height: 3px;
    background: #fff;
    z-index: 4;
    animation: whiteMove 3s ease-out infinite;
    mix-blend-mode: luminosity;
}

@keyframes whiteMove {
    8% {
        top: 38px;
    }
    10% {
        top: 8px;
    }
    12% {
        top: 42px;
    }
    99% {
        top: 36px;
    }
}
.clip{
	position: relative;
	font-size: 50px;
	font-weight: bold;/*
	background-size: cover;*/
	color: #ef8d86;
}
.clip:after{
	content: "明月几时有，把酒问青天";
	position: absolute;
	top: 0;
	left: 0;
	background: url("./img/clip.jpg") no-repeat center center;
	color: transparent; /*deeppink;要显示clip的效果，需要把color设置为透明*/
	/*以区块内的文字作为裁剪区域向外裁剪，文字的背景即为区块的背景，文字之外的区域都将被裁剪掉*/
	-webkit-background-clip: text;
	background-position: 0% 0%;
	animation: clip 8s linear infinite;
}
@keyframes clip{
	0%{
		background-size: 0% 100%;
	}
	100%{
		background-size: 100% 100%;
	}
}
.text {
    width: 500px;
    line-height: 100px;
    font-family: 'Arial', sans-serif;
    font-size: 80px;
    font-weight: bold;
    background: linear-gradient(90deg, red 0, orange 15%, yellow 30%, green 45%, teal 60%, blue 75%, purple 90% ,purple 100%);
    -webkit-background-clip: text;
    color: transparent;
    animation: changeColor .5s linear infinite alternate;
}

@keyframes changeColor {
    20% {
    	/*动画第一帧需要把clip放在background上，否则会没有效果
		  中间帧可以不写clip，但第一个和最后一个需要写上
    	*/
    	-webkit-background-clip: text;
        background: linear-gradient(90deg, red 0, orange 15%, yellow 30%, green 45%, teal 60%, blue 75%, purple 90% ,purple 100%);      
    }
    40% {
        background: linear-gradient(90deg, deeppink 0, yellowgreen 15%, fuchsia 30%, lime 45%, olive 60%, aqua 75%, coral 90% ,brown 100%);   
    	-webkit-background-clip: text;
    }
    60% {
        background: linear-gradient(-90deg, red 0, orange 15%, yellow 30%, green 45%, teal 60%, blue 75%, purple 90% ,purple 100%);        
    	-webkit-background-clip: text;
    }
    80% {    	
        background: linear-gradient(-90deg, blue 0, yellow 15%, orange 30%, teal 45%, purple 60%, coral 75%, brown 90% ,fuchsia 100%);     
		-webkit-background-clip: text;
    }
}
/*
1. 修改文字的font-size变成一个区域
2. 修改line-height改变文字的位置
3. filter: blur(10px) 使背景模糊
4. 设置背景图片：size, no-repeat, position
 */
.mask{
	position: relative;
	width: 600px;
	height: 400px;
}
.mask>div{
	width: 100%;
	height: 100%;
	background: url("https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1493353832&di=c063b6b9c89082e96ffee0766112ffec&imgtype=jpg&er=1&src=http%3A%2F%2Fpic2016.5442.com%3A82%2F2016%2F0111%2F07%2F3.jpg%21960.jpg");
	background-size: cover;
	background-repeat: no-repeat;
	background-position: center center;
    filter: blur(3px);
}
.mask>p{
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	text-align: center;
	color: transparent;
	background: url("https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1493353832&di=c063b6b9c89082e96ffee0766112ffec&imgtype=jpg&er=1&src=http%3A%2F%2Fpic2016.5442.com%3A82%2F2016%2F0111%2F07%2F3.jpg%21960.jpg");
	background-position: center center;
	background-size: cover;
	background-repeat: no-repeat;
	-webkit-background-clip: text;
	animation: p 4s infinite alternate;
}
@keyframes p{
	0%{
		line-height: 100px;
		font-size: 400px;
	}
	100%{
		line-height: 500px;
		font-size: 1000px;
	}
}

/*
initial: 初始值;
inherit：继承值
unset：可继承则为inherite，不可继承则为initial
 */

.css-stop{
	position: relative;
	height: 240px;
}
.pause{
	width: 50px;
	height: 30px;
	appearance: button;	
	-webkit-appearance: button;
	background: #03A9F4;
}
.pause:hover{
	cursor: pointer;
}
/*+紧跟，~所有*/
.pause:hover ~ .pink-rect{
	animation-play-state: paused;
}
.pink-rect{
	position: absolute;
	width: 150px;
	height: 150px;
	background: pink;
	animation: rectmove 3s infinite alternate;
}
@keyframes rectmove{
	0%{
		left: 0;
	}
	100%{
		left: 300px;
	}
}
input{
	/*-webkit-appearance: button;
	appearance: button;*/
}
.radio{
	visibility: hidden;
	/*display: none;*/
}
#stop:checked ~ .pink-rect{
	animation-play-state: paused;
}
#continue:checked ~ .pink-rect{
	animation-play-state: running;
}
/*线性渐变（径向渐变）是不支持 animation 的*/
/*单色的 background 是支持animation*/
/*size: 设置背景比盒子大，同时利用position改变背景位置，以此形成渐变*/
.gradient{
	width: 100%;
	height: 100px;
	/*background: red;*/
	background: linear-gradient(to right, red, orange, yellow, green, blue, purple);
	background-size: 200% 100%;
    background-repeat: no-repeat;
	animation: gradient 5s infinite;
}
@keyframes gradient{
	/*50%{
		background: blue;
	}*/
	/*50%{
		background: linear-gradient(90deg, #e91e1e 0%, #6f27b0 100%);
	}*/
	50%{
		background-position: 50%;
	}
}

.font{
	font-size: 80px;
}
/*
font-family定义顺序
body {
    font-family: tahoma, arial, 'Hiragino Sans GB', '\5b8b\4f53', sans-serif;
}
字体名称有空格时需要用引号
使用 tahoma 作为首选的西文字体，小字号下结构清晰端整、阅读辨识容易；
用户电脑未预装 tohoma，则选择 arial 作为替代的西文字体，覆盖 windows 和 MAC OS；
Hiragino Sans GB 为冬青黑体，首选的中文字体，保证了 MAC 用户的观看体验；
Windows 下没有预装冬青黑体，则使用 ‘\5b8b\4f53’ 宋体为替代的中文字体方案，小字号下有着不错的效果；
最后使用无衬线系列字体 sans-serif 结尾，保证旧版本操作系统用户能选中一款电脑预装的无衬线字体，向下兼容。*/

/*:root匹配html标签
p:empty没有子元素（元素，文本）
p:not(x) 排除x
*/
:root{
	background: lightblue;
}

.pseudo span:empty{
	display: inline-block;
	width: 40px;
	height: 40px;
	background: #000;
}
.pseudo span:not(.not){
	color: red;
	font-size: 20px;
}

/*在一个标签内画一条斜线
1. 用after画一条线，然后transform旋转
2. 添加一个背景图片
3. linear-gradient: 设置方向和透明度
4. border画一个三角形, after和before重叠
5. clip-path: polygon()画出一条线，并且用background进行直译;
*/
.diagonal div{
	position: relative;
	display: inline-block;
	width: 100px;
	height: 100px;
	margin: 10px;
	border: 1px solid #000;
}
.diagonal .after:after{
	content: '';
    display: block;
    position: absolute;
    width: 142px;
    height: 1px;
    background: #000;
    transform-origin: top left;
    transform: rotateZ(45deg);
}
.diagonal .background{
	background:  linear-gradient(45deg, transparent 49.5%, deeppink 49.5%, deeppink 50.5%, transparent 50.5%);
}
.diagonal .triangle:before{
	content: '';
	display: block;
	position: absolute;
	top: 0;
	left: 0;
	border-width: 50px;
    border-style: solid;
    border-top-color: transparent;
    border-bottom-color: blue;
    border-left-color: blue;
    border-right-color: transparent;
}
.diagonal .triangle:after{
	content: '';
    display: block;
    position: absolute;
    top: 2px;
    left: 0;
    border-width: 49px;
    border-style: solid;
    border-top-color: transparent;
    border-bottom-color: lightblue;
    border-left-color: lightblue;
    border-right-color: transparent;
}
.clip-path:after{
	content: "";
	display: block;
	width: 100%;
	height: 100%;
	clip-path: polygon(1px 0, 1px 1px, 99px 100px, 100px 100px);
	background: red;
}

/*
CSS实现点击时进行tab切换
1. a链接href实现# =>target
2. label for属性,然后选中某个input:checked(radio, checkbox)
3. 兄弟选择器~
 */
.tab{
	font-size: 18px;
}
.tab>div{
	display: inline-block;
	width: 200px;
	height: 100px;
}
.tab .list-head{
	width: 400px;
}
.tab a{
	display: inline-block;
	width: 100px;
	background: #2196f3;
}
/*css就近原则：后面的覆盖前面的*/
/*#test-a:link{
	background: red;
}
#test-a:visited{
	background: purple;
}
#test-a:active{
	background: green;
}
#test-a:hover{
	background: blue;
}*/

.tab a:hover{
	cursor: pointer;
}
/*.tab .list-head a:visited{
	background: orange;
}*/
.list-body .list{
	display: none;
}
.list-body .list:target{
	display: block;
	height: 60px;
	background: lightgreen;
}
#list1:target~.list-head a:first-child{
	background: #fff;
}
#list2:target~.list-head a:last-child{
	background: #fff;
}
/*#list2:target{
	display: block;
}
*/
.tab .list-item>div{
	display: none;
}
.tab input{
	display: none;
}
.label label{
	background: #fff;
}
.tab #list2-1:checked~.label label:first-child{
	background: #2196f3;
}
.tab #list2-2:checked~.label label:last-child{
	background: #2196f3;
}
.tab #list2-1:checked~.list-item div:first-child{
	display: block;
	width: 100px;
	height: 50xp;
	background: #2196f3;
}
.tab #list2-2:checked~.list-item div:last-child{
	display: block;
	width: 100px;
	height: 50xp;
	background: #2196f3;
}

/*
让表格中最外边格的边消失:
margin取负数以及overflow:hidden
 */
.disapear-border{
	margin-left: 20px;
}
.disapear-border ul{
	width: 135px;
	overflow: hidden;
}
.disapear-border ul li{
	margin-left: -2px;
	list-style: none;
}
.disapear-border span{
	display: inline-block;
	width: 40px;
	height: 40px;
	border-left: 1px solid blue;
	text-align: center;
}




